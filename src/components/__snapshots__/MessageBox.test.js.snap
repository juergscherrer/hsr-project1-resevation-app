// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MessageBox /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MessageBox
    message="Test Message"
    onClose={[Function]}
    open={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <WithStyles(Snackbar)
        ContentProps={
          Object {
            "aria-describedby": "message-id",
          }
        }
        anchorOrigin={
          Object {
            "horizontal": "left",
            "vertical": "bottom",
          }
        }
        autoHideDuration={6000}
        message={
          <span
            id="message-id"
          >
            Test Message
          </span>
        }
        onClose={[Function]}
        open={true}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "ContentProps": Object {
          "aria-describedby": "message-id",
        },
        "anchorOrigin": Object {
          "horizontal": "left",
          "vertical": "bottom",
        },
        "autoHideDuration": 6000,
        "message": <span
          id="message-id"
        >
          Test Message
        </span>,
        "onClose": [Function],
        "open": true,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <WithStyles(Snackbar)
          ContentProps={
            Object {
              "aria-describedby": "message-id",
            }
          }
          anchorOrigin={
            Object {
              "horizontal": "left",
              "vertical": "bottom",
            }
          }
          autoHideDuration={6000}
          message={
            <span
              id="message-id"
            >
              Test Message
            </span>
          }
          onClose={[Function]}
          open={true}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "ContentProps": Object {
            "aria-describedby": "message-id",
          },
          "anchorOrigin": Object {
            "horizontal": "left",
            "vertical": "bottom",
          },
          "autoHideDuration": 6000,
          "message": <span
            id="message-id"
          >
            Test Message
          </span>,
          "onClose": [Function],
          "open": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
